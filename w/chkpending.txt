##############################
## chkpending.txt
##
## Ajax reponder: check pending requests
##
###########################################################################
# This code is part of wITIP (a web based Information Theoretic Prover)
#
# Copyright 2017-2024 Laszlo Csirmaz, UTIA, Prague
# This program is free, open-source software. You may redistribute it
# and/or modify under the terms of the GNU General Public License (GPL).
# There is ABSOLUTELY NO WARRANTY, use at your own risk.
###########################################################################

use wSession;
use wUtils;
use strict;

my $session = new wSession;
exit(0) unless ( defined $session );
my $SSID = $session->{SSID};

exit 0 if(!$SSID || wUtils::check_SSID($SSID) );

# parameters:
#   what: sequence of labels separated by commas
#
# return value:
#   a sequence of lines, for each label which finished
#     label,<result>
#   where <result> is one of [timeout|failed|true|false|onlyge|onlyle]
#   

use wExpr;
use wUtils;

my @rescode=("","","","","timeout","failed",
            "true","false","onlyge","onlyle");

my @hist=(); my $result="";
my @labels=split(',',$session->getpar("what"));
foreach my $label(@labels){
    next if ($label !~ /^\d+$/ );
    my($r,$h)=wExpr::check_result($session,$label);
    # r=3,4,5,6,7,8,9
    if($rescode[$r]){
        push @hist,$h;
        $result .= "$label,".$rescode[$r]."\n";
    }
}
print "",$result || "0,none\n";
wUtils::write_user_history($session,"expr",\@hist);
exit 0;

__END__

=pod

=head1 wITIP Ajax responder

=head2 chkpending.txt

Ajax responder called periodically to check pending requests

Arguments are:

    SSID:  session ID
    what:  comma separated list of request labels

Session ID must have correct format otherwise the responder aborts. 
The response is a sequence of lines, one line for each finished request,
or a single line if all requests are pending. The lines have this format:

I<label>,I<result>

where I<label> is the label of the request, or zero when no request finished
yet. I<result> is the result, which is one of

     none        only when no result is returned
     timeout     timeout
     failed      LP solver failed
     true        the query is true
     false       the query is false
     onlyge      only >= holds
     onlyle      only <= holds

Add the result to the query history so the next reload will show the correct
results.


=cut

